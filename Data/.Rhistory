library(MASS)
library("dplyr")
library("ggpubr")
library(readxl)
coviddata = read_excel("coviddata.xlsx")
# --- Preparation --- #
library(mle4)
library(jtools)
library(lmerTest)
library(ggplot2)
library(ggeffects)
library("ggpubr")
# Setting Working Directory
setwd("D:/Skola/KTH/CM2009 - Statistics in Medical Engineering/Git/Data")
# Reading in required libraries
oncdata = read.csv(file = "oncdata.csv", head = TRUE , sep=",")
attach(oncdata)
fit2_model = lmer(TumourSize ~  1 + Months + Treatment + Stage + ( 1 | Subject)  , data = oncdata)
# Model 2
summary(fit2_model) # default lme4
summ(fit2_model)    # jtools
ranova(fit2_model)  # lmerTest
plot(fit2_model)
# Model 2
(fit2_plot <- ggplot(oncdata, aes(x = Months, y = TumourSize, colour = Stage)) +
facet_wrap(~Treatment, nrow=2) +   # a panel for Stage of Cancer
geom_point(alpha = 0.5) +
theme_classic() +
geom_line(data = cbind(oncdata, pred = predict(fit2_model)),
aes(y = pred), size = 1) +  # adding predicted line from mixed model
theme(legend.position = "none",
panel.spacing = unit(2, "lines"))  # adding space between panels
)
# Mixed-effects models
fit1_model = lmer(TumourSize ~ 1 + Months + Treatment + ( 1 | Subject)  , data = oncdata)
fit2_model = lmer(TumourSize ~  1 + Months + Treatment + Stage + ( 1 | Subject)  , data = oncdata)
fit3_model = lmer(TumourSize ~  1 + Months + Treatment + Month:Treatment + (1 | Subject)  , data = oncdata)
# Model 1
summary(fit1_model) # default lme4
summ(fit1_model)    # jtools
ranova(fit1_model)  # lmerTest
# Model 2
summary(fit2_model) # default lme4
summ(fit2_model)    # jtools
ranova(fit2_model)  # lmerTest
# Model 3
summary(fit3_model) # default lme4
summ(fit3_model)    # jtools
ranova(fit3_model)  # lmerTest
anova(fit1_model, fit2_model, fit2_model_reduced)
anova(fit1_model, fit2_model, fit3_model)
# Mixed-effects models
fit1_model = lmer(TumourSize ~ 1 + Months + Treatment + ( 1 | Subject)  , data = oncdata)
fit2_model = lmer(TumourSize ~  1 + Months + Treatment + Stage + ( 1 | Subject)  , data = oncdata)
fit3_model = lmer(TumourSize ~  1 + Months + Treatment + Month:Treatment + (1 | Subject)  , data = oncdata)
fit3_model = lmer(TumourSize ~  1 + Months + Treatment + Months:Treatment + (1 | Subject)  , data = oncdata)
# Model 3
summary(fit3_model) # default lme4
summ(fit3_model)    # jtools
ranova(fit3_model)  # lmerTest
anova(fit1_model, fit2_model, fit3_model)
fit4_model = lmer(TumourSize ~  1 + Months + Treatment + Stage + Months:Treatment + (1 | Subject)  , data = oncdata)
anova(fit1_model, fit2_model, fit3_model, fit4_model)
# Model 4
(fit4_plot <- ggplot(oncdata, aes(x = Months, y = TumourSize)) +
geom_point(alpha = 0.5) +
theme_classic() +
geom_line(data = cbind(oncdata, pred = predict(fit4_model)),
aes(y = pred), size = 1) +  # adding predicted line from mixed model
theme(legend.position = "none",
panel.spacing = unit(2, "lines"))  # adding space between panels
)
(ggplot(pred_fit2) +
geom_line(aes(x = x, y = predicted)) +          # slope
geom_ribbon(aes(x = x, ymin = predicted - std.error, ymax = predicted + std.error),
fill = "lightgrey", alpha = 0.5) +  # error band
geom_point(data = oncdata,                      # adding the raw data
aes(x = Months, y = TumourSize, colour = Stage)) +
labs(x = "Months passed", y = "Tumours Size",
title = "lorem ipsum...") +
theme()
)
summary(pred_fit2)
# Extract the prediction data frame
pred_fit2 = ggpredict(fit2_model, terms = c("Months"))  # this gives overall predictions for the model
(ggplot(pred_fit2) +
geom_line(aes(x = x, y = predicted)) +          # slope
geom_ribbon(aes(x = x, ymin = predicted - std.error, ymax = predicted + std.error),
fill = "lightgrey", alpha = 0.5) +  # error band
geom_point(data = oncdata,                      # adding the raw data
aes(x = Months, y = TumourSize, colour = Stage)) +
labs(x = "Months passed", y = "Tumours Size",
title = "lorem ipsum...") +
theme()
)
# Extract the prediction data frame
pred_fit2 = ggpredict(fit4_model, terms = c("Months"))  # this gives overall predictions for the model
(ggplot(pred_fit4) +
geom_line(aes(x = x, y = predicted)) +          # slope
geom_ribbon(aes(x = x, ymin = predicted - std.error, ymax = predicted + std.error),
fill = "lightgrey", alpha = 0.5) +  # error band
geom_point(data = oncdata,                      # adding the raw data
aes(x = Months, y = TumourSize, colour = Stage)) +
labs(x = "Months passed", y = "Tumours Size",
title = "lorem ipsum...") +
theme()
)
# Extract the prediction data frame
pred_fit4 = ggpredict(fit4_model, terms = c("Months"))  # this gives overall predictions for the model
(ggplot(pred_fit4) +
geom_line(aes(x = x, y = predicted)) +          # slope
geom_ribbon(aes(x = x, ymin = predicted - std.error, ymax = predicted + std.error),
fill = "lightgrey", alpha = 0.5) +  # error band
geom_point(data = oncdata,                      # adding the raw data
aes(x = Months, y = TumourSize, colour = Stage)) +
labs(x = "Months passed", y = "Tumours Size",
title = "lorem ipsum...") +
theme()
)
(ggplot(pred_fit4) +
facet_wrap(~ Treatment) + # create a facet for each mountain range
geom_line(aes(x = x, y = predicted)) +          # slope
geom_ribbon(aes(x = x, ymin = predicted - std.error, ymax = predicted + std.error),
fill = "lightgrey", alpha = 0.5) +  # error band
geom_point(data = oncdata,                      # adding the raw data
aes(x = Months, y = TumourSize, colour = Stage)) +
labs(x = "Months passed", y = "Tumours Size",
title = "lorem ipsum...") +
theme()
)
# Model 1
(fit1_plot <- ggplot(oncdata, aes(x = Months, y = TumourSize)) +
geom_point(alpha = 0.5) +
theme_classic() +
geom_line(data = cbind(oncdata, pred = predict(fit1_model)),
aes(y = pred), size = 1) +  # adding predicted line from mixed model
theme(legend.position = "none",
panel.spacing = unit(2, "lines"))  # adding space between panels
)
# Model 2
(fit2_plot <- ggplot(oncdata, aes(x = Months, y = TumourSize)) +
geom_point(alpha = 0.5) +
theme_classic() +
geom_line(data = cbind(oncdata, pred = predict(fit2_model)),
aes(y = pred), size = 1) +  # adding predicted line from mixed model
theme(legend.position = "none",
panel.spacing = unit(2, "lines"))  # adding space between panels
)
# Model 3
(fit3_plot <- ggplot(oncdata, aes(x = Months, y = TumourSize)) +
geom_point(alpha = 0.5) +
theme_classic() +
geom_line(data = cbind(oncdata, pred = predict(fit3_model)),
aes(y = pred), size = 1) +  # adding predicted line from mixed model
theme(legend.position = "none",
panel.spacing = unit(2, "lines"))  # adding space between panels
)
# Model 4
(fit4_plot <- ggplot(oncdata, aes(x = Months, y = TumourSize)) +
geom_point(alpha = 0.5) +
theme_classic() +
geom_line(data = cbind(oncdata, pred = predict(fit4_model)),
aes(y = pred), size = 1) +  # adding predicted line from mixed model
theme(legend.position = "none",
panel.spacing = unit(2, "lines"))  # adding space between panels
)
# Creating model of how TumourSize depends on Months passed
basic.lm <- lm(TumourSize ~ Months, data = oncdata)
summary(basic.lm)
# Plotting said model
(prelim_plot <- ggplot(oncdata, aes(x = Months, y = TumourSize)) +
geom_point() +
geom_smooth(method = "lm"))
# Plotting the residuals
plot(basic.lm, which = 1)
# Plotting the residuals of best model
plot(fit4_model, which = 1)
library(mle4)
library(jtools)
library(lmerTest)
library(ggplot2)
library(ggeffects)
library("ggpubr")
# Setting Working Directory
setwd("D:/Skola/KTH/CM2009 - Statistics in Medical Engineering/Git/Data")
# Reading in required libraries
oncdata = read.csv(file = "oncdata.csv", head = TRUE , sep=",")
attach(oncdata)
# Creating model of how TumourSize depends on Months passed
basic.lm <- lm(TumourSize ~ Months, data = oncdata)
summary(basic.lm)
# Plotting said model
(prelim_plot <- ggplot(oncdata, aes(x = Months, y = TumourSize)) +
geom_point() +
geom_smooth(method = "lm"))
# Showing both Stage and Treatment
boxplot(TumourSize ~ Stage , data = oncdata)
boxplot(TumourSize ~ Treatment, data = oncdata)
# Showing subject data
boxplot(TumourSize ~ Subject, data = oncdata)
hist(TumourSize)
hist(TumourSize, 100)
hist(TumourSize, 50)
hist(TumourSize, 40)
# Showing subject data
boxplot(TumourSize ~ Subject, data = oncdata)
hist(TumourSize, 40)
# Mixed-effects models
fit1_model = lmer(TumourSize ~ 1 + Months + Treatment + (1| Stage) + ( 1 | Subject)  , data = oncdata)
fit2_model = lmer(TumourSize ~  1 + Months + Treatment + Stage + ( 1 | Subject)  , data = oncdata)
fit3_model = lmer(TumourSize ~  1 + Months + Treatment + Months:Treatment + (1 | Subject)  , data = oncdata)
fit4_model = lmer(TumourSize ~  1 + Months + Treatment + Stage + Months:Treatment + (1 | Subject)  , data = oncdata)
# Model 1
summary(fit1_model) # default lme4
summ(fit1_model)    # jtools
ranova(fit1_model)  # lmerTest
# Model 2
summary(fit2_model) # default lme4
summ(fit2_model)    # jtools
ranova(fit2_model)  # lmerTest
# Model 3
summary(fit3_model) # default lme4
summ(fit3_model)    # jtools
ranova(fit3_model)  # lmerTest
# Model 4
summary(fit4_model) # default lme4
summ(fit4_model)    # jtools
ranova(fit4_model)  # lmerTest
anova(fit1_model, fit2_model, fit3_model, fit4_model)
# Mixed-effects models
fit1_model = lmer(TumourSize ~ 1 + Months + Treatment + ( 1 | Subject)  , data = oncdata)
fit2_model = lmer(TumourSize ~  1 + Months + Treatment + (1| Stage) + ( 1 | Subject)  , data = oncdata)
fit3_model = lmer(TumourSize ~  1 + Months + Treatment + Stage + (1 | Subject)  , data = oncdata)
fit4_model = lmer(TumourSize ~  1 + Months + Treatment + Stage + Months:Treatment + (1 | Subject)  , data = oncdata)
# Plotting the residuals of best model
plot(fit4_model, which = 1)
anova(fit1_model, fit2_model, fit3_model, fit4_model)
# Mixed-effects models
fit1_model = lmer(TumourSize ~ 1 + Months + Treatment + (1|Stage) + ( 1 | Subject)  , data = oncdata)
fit2_model = lmer(TumourSize ~  1 + Months + Treatment + Stage + ( 1 | Subject)  , data = oncdata)
fit3_model = lmer(TumourSize ~  1 + Months + Treatment + Months:Treatment + (1 | Subject)  , data = oncdata)
fit4_model = lmer(TumourSize ~  1 + Months + Treatment + Stage + Months:Treatment + (1 | Subject)  , data = oncdata)
anova(fit1_model, fit2_model, fit3_model, fit4_model)
boxplot(TumourSize ~ Months) # Tumours are increasing
boxplot(TumourSize ~ Months + Treatment + Stage)
boxplot(TumourSize ~ Months + Treatment + Stage)
boxplot(TumourSize ~ Months, data = oncdata[oncdata$Treatment == 1,]) # increasing less (6.8 - 8-8)
boxplot(TumourSize ~ Months, data = oncdata[oncdata$Treatment == 0,]) # increasing more (7 - 10.5)
boxplot(TumourSize ~ Months, data = oncdata[oncdata$Stage == 1,]) # increasing more (7.5 - 10.5)
boxplot(TumourSize ~ Months, data = oncdata[oncdata$Stage == 0,]) # increasing less (6.8 - 9)
boxplot(TumourSize ~ Months + Treatment, data = oncdata[oncdata$Stage == 0,])
boxplot(TumourSize ~ Months + Treatment, data = oncdata[oncdata$Stage == 1,])
boxplot(TumourSize ~ Months + Treatment, data = oncdata[oncdata$Stage == 0,])
boxplot(TumourSize ~ Months + Treatment, data = oncdata[oncdata$Stage == 1,])
boxplot(TumourSize ~ Months, data = oncdata[oncdata$Stage == 1,]) # increasing more (7.5 - 10.5)
boxplot(TumourSize ~ Months, data = oncdata[oncdata$Stage == 0,]) # increasing less (6.8 - 9)
anova(fit1_model, fit2_model, fit3_model, fit4_model)
# Plotting the residuals of best model
plot(fit4_model)
# Model 4
summary(fit4_model) # default lme4
# Mixed-effects models
fit1_model = lmer(TumourSize ~ 1 + Months:Treatment + (1|Stage) + ( 1 | Subject)  , data = oncdata)
fit2_model = lmer(TumourSize ~ 1 + Months:Treatment + Stage + (1 | Subject)  , data = oncdata)
# Model 1
summary(fit1_model) # default lme4
summ(fit1_model)    # jtools
ranova(fit1_model)  # lmerTest
# Model 2
summary(fit2_model) # default lme4
summ(fit2_model)    # jtools
ranova(fit2_model)  # lmerTest
# Model 3
summary(fit3_model) # default lme4
summ(fit3_model)    # jtools
ranova(fit3_model)  # lmerTest
# Model 4
summary(fit4_model) # default lme4
summ(fit4_model)    # jtools
anova(fit1_model, fit2_model)
fit5_model = lmer(TumourSize ~  1 + Months + Stage + Months:Treatment + (1 | Subject)  , data = oncdata)
anova(fit1_model, fit2_model, fit3_model, fit4_model, fit5_model)
summary(fit5_model) # default lme4
anova(fit1_model, fit2_model, fit3_model, fit4_model, fit5_model)
# Model 4
summary(fit4_model) # default lme4
